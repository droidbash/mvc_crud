@using WebMatrix.Data
@{
    String table = Request.QueryString["table"];
    Database db = Database.Open("develop");
    String findTableQuery = String.Format("USE GCAV SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = '{0}'",table);
    String tableColumnsQuery = String.Format("USE GCAV SELECT COLUMN_NAME, DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '{0}'",table);

    bool tableExist = db.Query(findTableQuery).ToList().Count > 0;
    List<dynamic> tableColumns = db.Query(tableColumnsQuery).ToList();
    if (!tableExist || !(tableColumns.Count > 0))
    {
        Response.Redirect("/Session/Unauthored");
    }
}
<div class="row">
    <div class="col">
        <button type="button" class="btn btn-outline-secondary add">Agregar en @(table)</button>
    </div>
</div>
<div class="row">
    <div class="col">
        <table id="datatable" class="table table-striped" style="width:100%">
            <thead>
                <tr>
                    @{
                        String cols = "";
                        String fields = "";
                        int x = 0;
                        foreach (var row in tableColumns)
                        {
                            x++;
                            fields += String.Format("{0}{1}", row.COLUMN_NAME, (x < tableColumns.Count ? "," : ""));
                            cols += "{\"data\": \"" + row.COLUMN_NAME + "\"},";
                            <th>@row.COLUMN_NAME</th>
                        }
                        cols += "{\"data\": null}";
                    }
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>
<div class="modal" id="myModal" tabindex="-1">
    <div class="modal-dialog">
        @using (Html.BeginForm(
            controllerName:"Edit",
            actionName: "Modal",
            method: FormMethod.Post,
            htmlAttributes: new { enctype = "multipart/form-data", onsubmit = "return validateForm(this)" }
        ))
        {
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title"></h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"><span aria-hidden="true"></span></button>
                </div>
                <div class="modal-body">
                    <div class="modalbody">
                        <input type="text" class="form-control" name="table" value="@(table)" hidden>
                        <input type="text" class="form-control" id="function" name="function" hidden>
                        @foreach (var row in tableColumns)
                        {
                            <div class="row">
                                <div class="col-md-12">
                                    @if (row.COLUMN_NAME == "Id")
                                    {
                                        <label for="id" hidden>@row.COLUMN_NAME</label>
                                        <input type="number" class="form-control" id="@(row.COLUMN_NAME)" name="@(row.COLUMN_NAME)" hidden>
                                    }
                                    else
                                    {
                                        if (row.DATA_TYPE == "int")
                                        {
                                            <label>@row.COLUMN_NAME</label>
                                            <input type="number" class="form-control" id="@(row.COLUMN_NAME)" name="@(row.COLUMN_NAME)" maxlength="5">
                                        }
                                        else if (row.DATA_TYPE == "varchar")
                                        {
                                            <label>@row.COLUMN_NAME</label>
                                            <input type="text" class="form-control" id="@(row.COLUMN_NAME)" name="@(row.COLUMN_NAME)">
                                        }
                                        else if (row.DATA_TYPE == "text")
                                        {
                                            <label>@row.COLUMN_NAME</label>
                                            <textarea class="form-control" id="@(row.COLUMN_NAME)" name="@(row.COLUMN_NAME)"></textarea>
                                        }
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-success submit" id="table" name="table" value="@(table)">Guardar</button>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts{
    <script>
        $(document).ready(function () {
            $('#datatable').DataTable(dataTableSettings);
            $(document).on('click', '.btn.edit', function () {
                fillFields($(this).data("id"));
                $('#function').val('edit');
                $('.modalbody').show();
                $('.modal').modal('toggle');
            });
            $(document).on('click', '.btn.add', function () {
                clearFields();
                $('#function').val('add');
                $('.modalbody').show();
                $('.modal').modal('toggle');
            });
            $(document).on('click', '.btn.delete', function () {
                $('.modal').modal('toggle');
                $('#function').val('delete');
                $('.modalbody').hide();
                $('#Id').val($(this).data("id"));
            });
            function clearFields() {
                $.each(fields.split(','), function (index, value) {
                    $('#' + value).val('').change();
                });
            }
            function fillFields(id) {
                //console.log($('#table').val() + '.id:' + id);
                $.ajax({
                    url: '/Edit/GetRowData',
                    data: {
                        id: id,
                        table: $('#table').val()
                    },
                    type: "POST",
                    success: function (data) {
                        data = $.parseJSON(data)[0];
                        for (var item in data) {
                            //console.log(item + ':' +data[item]);
                            $('#' + item).val(data[item]).change();
                        }
                    }
                });
            }
        });
        function validateForm(form) {
            $(form).validate({
                rules: {
                    Id: { required: true, minlength: 1, maxlength: 5 },
                },
                messages: {
                    Id: "El campo es obligatorio con longitud de 1 a 5.",
                }
            });
            if ($(form).valid()) {
                $.ajax({
                    url: form.action,
                    data: $(form).serialize(),
                    type: "POST",
                    success: function (data) {
                        console.log(data);
                        $('#datatable').DataTable().ajax.reload();
                        $('.modal').modal('toggle');
                    },
                    error: function (data) {
                        console.log(data);
                    }
                });
            }
            return false;
        }
        var fields = "@fields";
        var dataTableSettings =
        {
            "ajax": {
                "url": "/Edit/DataTable",
                "type": "POST",
                "datatype": "json",
                "data": {
                    table: $('#table').val()
                },
                "beforeSend": function () {
                    //$('#aplicar').prop('disabled', true);
                },
                "complete": function () {
                    //$('#aplicar').prop('disabled', false);
                }
            },
            "columns": [
                @(Html.Raw(cols))
            ],
            "columnDefs": [
                {
                    "orderable": false,
                    "searchable": false,
                    "render": function (data, type, full) {
                        //console.log(data);
                        //console.log(type);
                        //console.log(full);
                        return '<button type="button" class="btn btn-outline-secondary edit" data-id="' + data.Id + '">Edit</button><button type="button" style="margin-left: 5px;" class="btn btn-outline-danger delete" data-id="' + data.Id + '">Delete</button>';
                    },
                    "targets": @(tableColumns.Count)
                },
            ],
            "processing": true, // for show progress bar
            //"serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once

            "deferLoading": 25, // Solo tiene efecto si
            "deferRender": true,
            "lengthChange": true,
            "ordering": true,
            //"pageLength": 10,
            "paging": false,
            "pagingType": "full_numbers",
            "processing": true,
            "scrollCollapse": true,
            "scrollY": "52vh", // false
            "scrollX": false,
            "autoWidth": false,
            "order": [[0, "asc"]],
            //"serverSide": false
        };
    </script>
}